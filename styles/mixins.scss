@import 'variables.scss';

@mixin prefix($property, $value...) {
  // adds the major vendor prefixes
  -webkit-#{$property}: $value;
  -moz-#{$property}: $value;
  -ms-#{$property}: $value;
  -o-#{$property}: $value;
  $property: $value;
}

@mixin link-highlights(
  $vertical-default,
  $vertical-expanded,
  $right-margin: 0
) {
  // $vertical-default = the height (in pixels) needed to touch the bottom text
  // $vertical-expanded = the height (in pixels) needed to cover text on hover
  // usage example: @include link-highlights(6px, 22px, 0);
  $offset: (-1 * $vertical-default) + $highlight-height;
  $default: -1 * $vertical-default;
  $expanded: -1 * $vertical-expanded;
  $highlight-neg: -1 * $highlight-height;

  @if $offset > 0 {
    $offset: 0;
  }

  $box-shadow-default: inset 0 $offset 0 0 $backgroundcolor-default,
    inset 0 $default 0 0 $highlight-color;
  $box-shadow-hover: inset 0 0 0 0 $backgroundcolor-default,
    inset 0 $expanded 0 0 $highlight-color;

  &,
  &:active,
  &:visited {
    @include spacing-reset();
    @include prefix(box-decoration-break, clone);
    @include prefix(box-shadow, $box-shadow-default);
    @include prefix(
      transition,
      box-shadow 0.4s ease-in-out,
      margin 0.4s ease-in-out,
      padding 0.4s ease-in-out
    );
  }

  &:focus,
  &:hover {
    @include prefix(box-shadow, $box-shadow-hover);
    margin: 0 $highlight-neg;
    padding: 0 $highlight-height;
  }

  @if $right-margin != 0 {
    &,
    &:active,
    &:visited {
      margin: 0 $right-margin 0 0;
    }

    @if unit($right-margin) == 'rem' {
      &:focus,
      &:hover {
        // NOTE: these values are different as we have to calculate using the textroot sizes...
        $highlight-rem-mobile: $highlight-neg / $textroot-mobile;
        $highlight-rem-desktop: $highlight-neg / $textroot-desktop;

        margin: 0 ($highlight-rem-mobile + $right-margin) 0 $highlight-neg;

        @media (min-width: $site-breakpoint) {
          margin: 0 ($highlight-rem-desktop + $right-margin) 0 $highlight-neg;
        }
      }
    }

    @if unit($right-margin) == 'px' {
      &:focus,
      &:hover {
        // ...px calculations don't need this adjustment BUT are not responsive
        margin: 0 ($highlight-neg + $right-margin) 0 $highlight-neg;
      }
    }
  }
}

@mixin spacing-reset() {
  @include prefix(box-sizing, border-box);
  margin: 0;
  padding: 0;
}

@mixin textcase-uppercase() {
  letter-spacing: 1px;
  text-transform: uppercase;
}

@mixin textcase-lowercase() {
  letter-spacing: unset;
  text-transform: lowercase;
}

@mixin textcase-reset() {
  letter-spacing: unset;
  text-transform: unset;
}

@mixin textsize-xl {
  font-size: $textsize-xl;

  a {
    @include link-highlights(12px, 48px);
  }
}

@mixin textsize-lg {
  font-size: $textsize-lg;

  a {
    @include link-highlights(10px, 42px);
  }
}

@mixin textsize-md {
  font-size: $textsize-md;

  a {
    @include link-highlights(8px, 36px);
  }
}

@mixin textsize-sm {
  font-size: $textsize-sm;

  a {
    @include link-highlights(6px, 22px);
  }
}

@mixin textsize-xs {
  font-size: $textsize-xs;

  a {
    @include link-highlights(6px, 22px);
  }
}

@mixin textweight-bold() {
  font-weight: $textweight-bold;
}

@mixin textweight-normal() {
  font-weight: $textweight-normal;
}

@mixin textbase-common() {
  @include spacing-reset();
  font-family: $textfamily-default;
}

@mixin textbase-body() {
  @include textbase-common();
  color: $textcolor-default;
  line-height: $textheight-body();
}

@mixin textbase-code() {
  @include spacing-reset();
  color: $textcolor-code;
  font-family: $textfamily-code;
  font-size: $textsize-sm;
  line-height: $textheight-body;
}

@mixin textbase-heading() {
  @include textbase-common();
  color: $textcolor-default;
  line-height: $textheight-heading;
}

@mixin heading-xl() {
  @include textbase-heading();
  @include textsize-xl();
  @include textweight-normal();
  margin: 0 0 $spacer-sm;
}

@mixin heading-lg() {
  @include textbase-heading();
  @include textsize-lg();
  @include textweight-bold();
  margin: 0 0 $spacer-sm;
}

@mixin heading-md() {
  @include textbase-heading();
  @include textsize-md();
  @include textweight-bold();
  margin: 0 0 $spacer-sm;
}

@mixin heading-sm() {
  @include textbase-heading();
  @include textcase-lowercase();
  @include textsize-sm();
  @include textweight-normal();
  display: inline-block;

  // NOTE: to give links with this style a little more space horizontally, I added a margin-right, but this also means the -margin and +padding values need to change to account for increase in the right side, so we call link-highlights again. Works for values in rem or in px.
  @include link-highlights(6px, 22px, $spacer-xs);
}

@mixin heading-xs() {
  @include textbase-heading();
  @include textcase-uppercase();
  @include textsize-xs();
  @include textweight-bold();
}

@mixin body() {
  @include textbase-body();
  @include textweight-normal();
  margin: 0 0 $spacer-sm;
}
